//
// Autogenerated by Thrift Compiler (0.9.3)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = module.exports = {};
if (typeof nexx === 'undefined') {
  nexx = {};
}
if (typeof nexx.shared === 'undefined') {
  nexx.shared = {};
}
nexx.shared.ProfileVerificationForm = module.exports.ProfileVerificationForm = function(args) {
  this.uid = null;
  this.verificationCode = null;
  this.verificationExpiry = null;
  this.updatedBy = null;
  this.isVerified = null;
  if (args) {
    if (args.uid !== undefined && args.uid !== null) {
      this.uid = args.uid;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field uid is unset!');
    }
    if (args.verificationCode !== undefined && args.verificationCode !== null) {
      this.verificationCode = args.verificationCode;
    }
    if (args.verificationExpiry !== undefined && args.verificationExpiry !== null) {
      this.verificationExpiry = args.verificationExpiry;
    }
    if (args.updatedBy !== undefined && args.updatedBy !== null) {
      this.updatedBy = args.updatedBy;
    }
    if (args.isVerified !== undefined && args.isVerified !== null) {
      this.isVerified = args.isVerified;
    }
  }
};
nexx.shared.ProfileVerificationForm.prototype = {};
nexx.shared.ProfileVerificationForm.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.verificationCode = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.verificationExpiry = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.updatedBy = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.BOOL) {
        this.isVerified = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

nexx.shared.ProfileVerificationForm.prototype.write = function(output) {
  output.writeStructBegin('ProfileVerificationForm');
  if (this.uid !== null && this.uid !== undefined) {
    output.writeFieldBegin('uid', Thrift.Type.STRING, 1);
    output.writeString(this.uid);
    output.writeFieldEnd();
  }
  if (this.verificationCode !== null && this.verificationCode !== undefined) {
    output.writeFieldBegin('verificationCode', Thrift.Type.STRING, 2);
    output.writeString(this.verificationCode);
    output.writeFieldEnd();
  }
  if (this.verificationExpiry !== null && this.verificationExpiry !== undefined) {
    output.writeFieldBegin('verificationExpiry', Thrift.Type.STRING, 3);
    output.writeString(this.verificationExpiry);
    output.writeFieldEnd();
  }
  if (this.updatedBy !== null && this.updatedBy !== undefined) {
    output.writeFieldBegin('updatedBy', Thrift.Type.STRING, 4);
    output.writeString(this.updatedBy);
    output.writeFieldEnd();
  }
  if (this.isVerified !== null && this.isVerified !== undefined) {
    output.writeFieldBegin('isVerified', Thrift.Type.BOOL, 5);
    output.writeBool(this.isVerified);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

